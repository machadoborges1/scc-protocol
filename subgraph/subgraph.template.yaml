specVersion: 0.0.7
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: VaultFactory
    network: anvil
    source:
      address: "{{VAULT_FACTORY_ADDRESS}}"
      abi: VaultFactory
      startBlock: {{START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Vault
        - User
        - Protocol
      abis:
        - name: VaultFactory
          file: ./abis/VaultFactory.json
        - name: OracleManager
          file: ./abis/OracleManager.json
      eventHandlers:
        - event: VaultCreated(indexed address,indexed address)
          handler: handleVaultCreated
      file: ./src/mappings/vault-factory.ts

  - kind: ethereum
    name: LiquidationManager
    network: anvil
    source:
      address: "{{LIQUIDATION_MANAGER_ADDRESS}}"
      abi: LiquidationManager
      startBlock: {{START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - LiquidationAuction
      abis:
        - name: LiquidationManager
          file: ./abis/LiquidationManager.json
      eventHandlers:
        - event: AuctionStarted(indexed uint256,indexed address,uint256,uint256,uint256)
          handler: handleAuctionStarted
        - event: AuctionBought(indexed uint256,indexed address,uint256,uint256)
          handler: handleAuctionBought
        - event: AuctionClosed(indexed uint256,indexed address)
          handler: handleAuctionClosed
      file: ./src/mappings/liquidation-manager.ts

  - kind: ethereum
    name: StakingPool
    network: anvil
    source:
      address: "{{STAKING_POOL_ADDRESS}}"
      abi: StakingPool
      startBlock: {{START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - StakingPosition
        - RewardEvent
      abis:
        - name: StakingPool
          file: ./abis/StakingPool.json
      eventHandlers:
        - event: Staked(indexed address,uint256)
          handler: handleStaked
        - event: Unstaked(indexed address,uint256)
          handler: handleUnstaked
        - event: RewardPaid(indexed address,uint256)
          handler: handleRewardPaid
      file: ./src/mappings/staking-pool.ts

  - kind: ethereum
    name: SCC_Governor
    network: anvil
    source:
      address: "{{SCC_GOVERNOR_ADDRESS}}"
      abi: SCC_Governor
      startBlock: {{START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - GovernanceProposal
        - Vote
        - User
      abis:
        - name: SCC_Governor
          file: ./abis/SCC_Governor.json
      eventHandlers:
        - event: ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)
          handler: handleProposalCreated
        - event: VoteCast(indexed address,uint256,uint8,uint256,string)
          handler: handleVoteCast
        - event: ProposalCanceled(uint256)
          handler: handleProposalCanceled
        - event: ProposalExecuted(uint256)
          handler: handleProposalExecuted
      file: ./src/mappings/governance.ts

templates:
  - kind: ethereum
    name: Vault
    network: anvil
    source:
      abi: Vault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Vault
        - VaultUpdate
      abis:
        - name: Vault
          file: ./abis/Vault.json
        - name: OracleManager
          file: ./abis/OracleManager.json
      eventHandlers:
        - event: CollateralDeposited(uint256)
          handler: handleCollateralDeposited
        - event: CollateralWithdrawn(uint256)
          handler: handleCollateralWithdrawn
        - event: SccUsdMinted(uint256)
          handler: handleSccUsdMinted
        - event: SccUsdBurned(uint256)
          handler: handleSccUsdBurned
      file: ./src/mappings/vault.ts